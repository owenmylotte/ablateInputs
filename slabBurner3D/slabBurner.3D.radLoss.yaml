---
environment:
  title: _3dSlabBurner
  tagDirectory: true
arguments:
  outputAuxVector: true
timestepper:
  arguments:
    ts_type: rk
    ts_max_time: 100000
    ts_max_steps: 3000000
    ts_dt: 1.0E-10
    ts_adapt_safety: 0.99
    ts_adapt_type: physicsConstrained
  io: !ablate::io::Hdf5MultiFileSerializer
    interval: 1000
  domain: !ablate::domain::BoxMeshBoundaryCells
    name: simpleBoxField
    faces: [ 355,60,60 ] # this is ~.36mm
    #    faces: [ 105,15,15 ]
    lower: [ 0.0, 0.0, -0.0127 ]
    upper: [ 0.15, 0.0254, 0.0127 ]
    simplex: false
    options:
      dm_plex_hash_location: true
    preModifiers:
      # distribute the mesh across the mpi rank with ghost cells
      - !ablate::domain::modifiers::DistributeWithGhostCells
        ghostCellDepth: 3
    postModifiers:
      # merge all the walls to simplify setup
      - !ablate::domain::modifiers::MergeLabels
        mergedRegion:
          name: allWallBoundaryRegion
        regions:
          - name: boundaryCellsTop
          - name: boundaryCellsBottom
          - name: boundaryCellsFront
          - name: boundaryCellsBack
      # create a label for the slab burner
      - !ablate::domain::modifiers::CreateLabel
        region:
          name: slabBurnerRegion
        function: !ablate::mathFunctions::geom::ConvexPolygon
          # Dimensions to match paper: Radiation Heat Transfer in Ablating Boundary Layer Combustion Theory used for
          #                            Hybrid Rocket Motor Analysis
          points:
            - [ 0.0132,-.1 ]
            - [ 0.0132,0 ]
            - [ 0.0232,0.010 ]
            - [ 0.0932,0.010 ]
            - [ 0.0933,0 ]
            - [ 0.0933,-.1 ]
          maxDistance: 0.004750

      # create a label for defining the glowPlug
      - !ablate::domain::modifiers::SubtractLabel
        # cut the slabBurner and glow plug out of the flowRegion
        differenceRegion:
          name: flowRegion
        minuendRegion:
          name: interiorCells
        subtrahendRegions:
          - name: slabBurnerRegion
      - !ablate::domain::modifiers::SubtractLabel
        # cut the slabBurner and glow plug out of the boundaryWalls
        differenceRegion:
          name: wallBoundaryRegion
        minuendRegion:
          name: allWallBoundaryRegion
        subtrahendRegions:
          - name: slabBurnerRegion
      - !ablate::domain::modifiers::TagLabelInterface
        # define the boundary between the slab burner and flow
        leftRegion:
          name: flowRegion
        rightRegion:
          name: slabBurnerRegion
        boundaryFaceRegion:
          name: slabBurnerBoundaryFaces
        rightBoundaryCellRegion:
          name: slabBurnerBoundaryCells
      - !ablate::domain::modifiers::SubtractLabel
        # remove the slabBurnerFace from the flowRegion
        differenceRegion:
          name: interiorFlowRegion
        minuendRegion:
          name: flowRegion
        subtrahendRegions:
          - name: slabBurnerBoundaryFaces
        incompleteLabel: true

      - !ablate::domain::modifiers::GhostBoundaryCells
    fields:
      - !ablate::finiteVolume::CompressibleFlowFields
        eos: !ablate::eos::TChem  &eos
          mechFile: ../mechanisms/gri30.yaml
          options:
            # set a minimum temperature for the chemical kinetics ode integration
            thresholdTemperature: 560
        conservedFieldOptions:
          petscfv_type: leastsquares
        region:
          name: domain

      # create a conserved field to track ndd
      - !ablate::finiteVolume::ExtraVariable
        name: "Progress"
        components: [ "NDD" ]
        region:
          name: domain

      # by adding a pressure field the code will compute and output pressure
      - !ablate::domain::FieldDescription
        name: pressure
        type: FV
        location: aux
        region:
          name: domain
  initialization:
    - !ablate::finiteVolume::fieldFunctions::Euler
      state: &flowFieldState
        eos: *eos
        # use a sphere geometry to set up an ignition kernel
        temperature: !ablate::mathFunctions::geom::Sphere
          center: [ 0.0142,  0.010 , 0.0 ]
          radius: 0.0075
          insideValues: 1673.15
          outsideValues: 300
        pressure: 101325.0
        velocity: "0.0, 0.0, 0.0"
        other: !ablate::finiteVolume::fieldFunctions::MassFractions
          &oxMassFrac
          eos: *eos
          values:
            - fieldName: O2
              field: 1.0
    - !ablate::finiteVolume::fieldFunctions::DensityMassFractions
      state: *flowFieldState

    # Set the soot number density to zero
    - fieldName: densityProgress
      field: "0.0"

    # Set the boundary cells for the slab to a different initial condition
    - !ablate::finiteVolume::fieldFunctions::Euler
      # slab Burner
      region:
        name: slabBurnerBoundaryCells
      state: &fuelFieldState
        eos: *eos
        temperature: 653.0 #fuel temperature
        pressure: 101325.0
        velocity: "0.0, 0.0, 0.0"
        other: !ablate::finiteVolume::fieldFunctions::MassFractions
          &fuelMassFrac
          eos: *eos
          values:
            - fieldName: H2
              field: 2.6605252679403324e-08
            - fieldName: CH4
              field: 0.03130099022620085
            - fieldName: C2H2
              field: 0.019041133292868283
            - fieldName: C2H4
              field: 0.9085604652430157
            - fieldName: C2H6
              field: 0.012981434565768965
            - fieldName: C3H8
              field: 0.02811595000348999
    - !ablate::finiteVolume::fieldFunctions::DensityMassFractions
      region:
        name: slabBurnerBoundaryCells
      state: *fuelFieldState

solvers:
  - !ablate::finiteVolume::CompressibleFlowSolver
    id: flowField
    region:
      name: interiorFlowRegion
    parameters:
      cfl: 0.45
    eos: *eos
    # the primary transport model applies to everything but the extra variables.
    transport: !ablate::eos::tChemSoot::SootSpeciesTransportModel
      # the SootSpeciesTransportModel adjusts the diffusion coefficient to carbon appropriately
      transport: !ablate::eos::transport::Sutherland
        eos: *eos
    # if specified, the evTransport is used for the ndd transport
    evTransport: !ablate::eos::tChemSoot::SootProgressTransportModel
      transport: !ablate::eos::transport::Sutherland
        eos: *eos
    # additional monitors can be added to the flow solver.
    monitors:
      # The time step monitor outputs the current timestep and dt every 10 steps
      - !ablate::monitors::TimeStepMonitor
        interval: 25
      - !ablate::monitors::PhysicsTimeStep
        interval: 25

      # The mixture fraction calculator outputs zMix and Yi everytime the serializer saves
      - !ablate::monitors::MixtureFractionMonitor
        mixtureFractionCalculator: !ablate::monitors::MixtureFractionCalculator
          eos: *eos
          massFractionsFuel: *fuelMassFrac
          massFractionsOxidizer: *oxMassFrac
          # additional processes can be added to the flow solver
    additionalProcesses:
      - !ablate::finiteVolume::processes::PressureGradientScaling
        &pgs
        eos: *eos
        alphaInit: 5.0
        maxAlphaAllowed: 100.0
        domainLength: 0.165354
        log: !ablate::monitors::logs::StdOut
      - !ablate::finiteVolume::processes::Chemistry
        eos: *eos
      # ThermophoreticDiffusion diffusion controls the diffusion of solid carbon and ndd
      - !ablate::finiteVolume::processes::ThermophoreticDiffusion
        transport: !ablate::eos::transport::Sutherland
          eos: *eos
      # use ablate::finiteVolume::processes::Soot to compute ndd and carbon source terms
      - !ablate::finiteVolume::processes::Soot
        eos: *eos
    # a flux calculator must be specified to so solver for advection
    fluxCalculator: !ablate::finiteVolume::fluxCalculator::AusmpUp
      pgs: *pgs

  # each boundary can be updated with a separate boundary solver
  - !ablate::boundarySolver::BoundarySolver
    id: inlet
    region:
      name: boundaryCellsLeft
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::Inlet
        eos: *eos
        pgs: *pgs
        velocity: !ablate::mathFunctions::Formula
          formula: "max(0.0, min(vel, t*vel/.001)), 0.0, 0.0"
          nested:
            vel: !ablate::mathFunctions::Formula
              formula: velFac*(1 - r/(dia/2.0))^(1/7)
              constants:
                dia: 0.0254
                velFac: 6.28305996662731 # 0.156 m3/min
              nested:
                r: !ablate::mathFunctions::Formula
                  formula: sqrt((y-yc)^2 + (z-zc)^2)
                  constants:
                    yc: 0.0127
                    zc: 0.0

  # the outlet boundary uses a reference pressure and maxAcousticsLength
  - !ablate::boundarySolver::BoundarySolver
    id: outlet
    region:
      name: boundaryCellsRight
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !ablate::boundarySolver::lodi::OpenBoundary
        referencePressure: 101325.0
        maxAcousticsLength: 0.165354
        reflectFactor: 15.0
        pgs: *pgs
        eos: *eos
  - !ablate::boundarySolver::BoundarySolver
    id: walls
    region:
      name: wallBoundaryRegion
    fieldBoundary:
      name: boundaryFaces
    mergeFaces: true
    processes:
      - !<!ablate::boundarySolver::lodi::IsothermalWall>
        pgs: *pgs
        eos: *eos
  - !<!ablate::boundarySolver::BoundarySolver>
    id: slab boundary
    region:
      name: slabBurnerBoundaryCells
    fieldBoundary:
      name: slabBurnerBoundaryFaces
    processes:
      - !<!ablate::boundarySolver::physics::Sublimation>
        latentHeatOfFusion: 1462876.0
        transportModel: !<!ablate::eos::transport::Sutherland>
          eos: *eos
        pgs: *pgs
        eos: *eos
        massFractions: *fuelMassFrac
        radiationInterval: 10
        radiation: !ablate::radiation::SurfaceRadiation
          id: surfaceflux
          region:
            name: flowRegion
          rays: 23
          # the properties are a function of both gas and soot
          properties: !ablate::eos::radiationProperties::Sum
            - !ablate::eos::radiationProperties::Zimmer
              eos: *eos
            - !ablate::eos::radiationProperties::SootMeanProperties
              eos: *eos
          log: !<!ablate::monitors::logs::StdOut>
            name: radlog
        emissivity: 0.9
        # density of pmma used to output reg rate
        solidDensity: 1190.0
    monitors:
      - !<!ablate::monitors::BoundarySolverMonitor> ""
  - !ablate::radiation::VolumeRadiation
    id: radiationSolver
    region:
      name: interiorCells
    interval: 10
    radiation: !ablate::radiation::Radiation
      id: volRad
      region:
        name: flowRegion
      rays: 18
      properties: !ablate::eos::radiationProperties::Sum
        - !ablate::eos::radiationProperties::Zimmer
          eos: *eos
        - !ablate::eos::radiationProperties::SootMeanProperties
          eos: *eos
      log: !<!ablate::monitors::logs::StdOut>
        name: radlog