# Radiative equilibrium.planar problem for testing the coupling of the radiation solver with the
# energy equation. This serves as verification for the radiation solver.
---
environment:
  title: _equilibrium.spherical
  tagDirectory: true
arguments:
  dm_plex_gmsh_use_regions: true
timestepper:
  # setup default controls for the time stepper
  arguments:
    ts_type: rk
    ts_max_time: 1.0E10
    ts_max_steps: 10000000
    ts_dt: 1.0E-9
    # petsc adaptive timestepping can be turned on to replace physics timestepping
    ts_adapt_safety: 0.99
  # io controls how often the results are saved to a file for visualization and restart
  io:
    #  results are outputted every 0.001 seconds of real simulation time
    interval: 250
  # load in a mesh file
  domain: !ablate::domain::MeshFile
    name: volumeMesh
    path: ../geom/tet_shell.msh
    # Options to be applied to the volumetric geometry
    options:
      dm_plex_check_all: true
      dm_plex_hash_location: true
      dm_distribute_overlap: 1
    modifiers:
      # if using mpi, this modifier distributes cells
      - !ablate::domain::modifiers::DistributeWithGhostCells
        ghostCellDepth: 1
    fields:
      - !ablate::finiteVolume::CompressibleFlowFields
        eos: !ablate::eos::PerfectGas &eos
          parameters:
            gamma: 1.4
            Rgas: 287.0
        conservedFieldOptions:
          petscfv_type: leastsquares
          petsclimiter_type: vanleer
  initialization:
    - !ablate::finiteVolume::fieldFunctions::Euler
      region:
        name: volume
      state: &initFlowState
        eos: *eos
        pressure: 1.0
        temperature: !ablate::mathFunctions::Formula
          formula: "((x*x)+(y*y)+(z*z))*200.0"
        velocity: "0.0, 0.0, 0.0"
#    - !ablate::finiteVolume::fieldFunctions::Euler
#      region:
#        name: BoundaryCells
#      state: &R1State
#        eos: *eos
#        temperature: !ablate::mathFunctions::geom::Sphere
#          center: [0, 0, 0]
#          radius: 6.0
#          insideValues: 2000.0
#          outsideValues: 1000.0
#        pressure: 1.0
#        velocity: "0.0, 0.0, 0.0"
solvers:
  - !ablate::finiteVolume::CompressibleFlowSolver
    id: vortexFlowField
    region:
      name: volume
    monitors:
      - !ablate::monitors::TimeStepMonitor
        interval: 250
    eos: *eos
  - !ablate::radiation::VolumeRadiation
    id: radiationSolver
    region:
      name: volume
    interval: 25
    radiation: !ablate::radiation::Radiation
      id: flameradiation
      region:
        name: volume
      rays: 23
      properties: !ablate::eos::radiationProperties::Constant
        absorptivity: 1
        emissivity: 1
        eos: *eos
      log: !ablate::monitors::logs::StdOut
        name: radlog
  # use a boundary solver to update the cells in the wallBoundaryCells region to represent standard wall
#  - !ablate::boundarySolver::BoundarySolver
#    id: sphereBoundary
#    region:
#      name: BoundaryCells
#    fieldBoundary:
#      name: BoundaryFaces
#    mergeFaces: true
#    processes:
#      - !ablate::boundarySolver::lodi::IsothermalWall
#        eos: *eos